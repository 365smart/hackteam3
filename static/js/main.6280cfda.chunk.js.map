{"version":3,"sources":["Screens/styles.js","Screens/Card.js","Screens/QuizPage.js","Screens/LobbyPage.js","Screens/LeaderRow.js","Screens/ResultsPage.js","Screens/Leaderboard.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Header","Logo","img","Label","label","Input","input","Button","button","Countdown","QuestionCard","LinkButton","Link","RoundButton","TopSection","Timer","Question","Answer","props","wrong","right","pick","Card","state","timer","myAnswer","handleAnswerClick","bind","this","countdown","setTimeout","setState","value","console","log","correctAnswer","users","points","quiz","answers","question","map","answer","i","disabled","onClick","React","Component","QuizPage","to","LobbyPage","name","done","countdownSec","handleNextClick","handleNameChange","event","target","seconds","mm","parseInt","ss","toMMSS","role","aria-label","src","Fragment","onChange","Row","Group","Name","Place","Points","LeaderRow","place","ResultsPage","Leaderboard","Global","Lobby","Quiz","Results","Leaders","App","exact","path","children","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6280cfda.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n  align-items: center;\n  padding: 8px;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  font-size: 24px;\n  height: 48px;\n  line-height: 48px;\n  text-align: center;\n`;\n\nconst Logo = styled.img`\n  height: 160px;\n  width: 160px;\n  margin-bottom: 40px;\n  margin-top: 16px;\n`;\n\nconst Label = styled.label`\n  line-height: 32px;\n  font-size: 24px;\n  font-weight: 400;\n`;\n\nconst Input = styled.input`\n  height: 48px;\n  background: white;\n  color: #22212D;\n  font-size: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  border-radius: 45px;\n  width: 100%;\n  max-width: 420px;\n  margin: 8px 16px;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif!important;\n  box-sizing: border-box;\n  text-transform: capitalize;\n`;\n\nconst Button = styled.button`\n  border-radius: 45px;\n  height: 48px;\n  background: #22212D;\n  color: white;\n  font-size: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  border-radius: 45px;\n  width: 100%;\n  max-width: 420px;\n  margin: 8px 16px;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif!important;\n`;\n\nconst Countdown = styled.div`\n  font-size: 80px;\n  font-weight: 700;\n  line-height: 96px;\n`;\n\nconst QuestionCard = styled.div`\n  background: white;\n  padding: 16px;\n  border-radius: 16px;\n  width: calc(100% - 48px);\n  display: flex;\n  margin: 16px;\n  height: auto;\n  align-items: center;\n  flex-direction: column;\n  max-width: 480px;\n`;\n\nconst LinkButton = styled(Link)`\n  border-radius: 45px;\n  height: 48px;\n  background: #22212D;\n  color: white;\n  font-size: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  border-radius: 45px;\n  width: 100%;\n  max-width: 420px;\n  margin: 8px 16px;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif!important;\n  text-decoration: none;\n  line-height: 48px;\n`;\n\nconst RoundButton = styled(LinkButton)`\n  width: 64px;\n  height: 64px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  position: absolute;\n  bottom: 16px;\n  right: 16px;\n  line-height: 1;\n`\n\nexport {\n  Container,\n  Header,\n  Logo,\n  Label,\n  Input,\n  Button,\n  Countdown,\n  QuestionCard,\n  LinkButton,\n  RoundButton,\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  QuestionCard\n} from './styles';\n\nconst TopSection = styled.div`\n  height: 32px;\n  line-height: 32px;\n  color: #999;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst Timer = styled.div`\n  background: #22212D;\n  height: 64px;\n  width: 64px;\n  color: white;\n  font-size: 24px;\n  border-radius: 45px;\n  text-align: center;\n  line-height: 64px;\n  margin-bottom: 8px;\n`;\n\nconst Question = styled.div`\n  padding: 8px 24px;\n  color: #22212D;\n  font-size: 18px;\n  text-align: center;\n  font-weight: 700;\n  margin-bottom: 24px;\n`;\n\nconst Answer = styled.button`\n  width: calc(100% - 16px);\n  border-radius: 45px;\n  background: ${props => props.wrong ? '#D13F4B' : props.right ? '#00BF6F' : '#EAEAEB'}\n  color: ${props => props.wrong ? '#FFF' : props.right ? '#FFF' : '#22212D'}\n  opacity: ${props => props.pick ? '.5' : '1'}\n  height: 48px;\n  line-height: 48px;\n  padding: 0px 16px;\n  margin: 8px;\n  outline: none;\n  border: none;\n  font-size: 18px;\n  text-align: left;\n  &:focus {\n    background: #22212D;\n    color: white;\n  }\n`;\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: 5,\n      myAnswer: null,\n    }\n    this.handleAnswerClick = this.handleAnswerClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.countdown();\n  }\n\n  countdown() {\n    let { timer } = this.state;\n    setTimeout(() => {\n      timer = timer - 1;\n      this.setState({ timer });\n      if (timer) {\n        this.countdown();\n      } else {\n\n      }\n    }, 1000)\n  }\n\n  handleAnswerClick(value) {\n    console.log(`answer ${value} click`)\n    const { correctAnswer } = this.props;\n    if (value === correctAnswer) {\n      console.log('correct answer');\n    } else {\n      console.log('wrong answer');\n    }\n    this.setState({ myAnswer: value });\n  }\n\n  render() {\n    const {\n      users,\n      points,\n      quiz,\n    } = this.props;\n\n    const { answers, question, correctAnswer } = quiz;\n    const { timer, myAnswer } = this.state;\n\n    return (\n      <QuestionCard>\n        <TopSection>\n          <div>{users} users</div>\n          <div>{points} points</div>\n        </TopSection>\n        {timer === 0 && myAnswer === correctAnswer && <Timer>right</Timer>}\n        {timer === 0 && myAnswer !== correctAnswer && <Timer>wrong</Timer>}\n        {timer > 0 && <Timer>{timer}</Timer>}\n        <Question>{question}</Question>\n        {answers.map((answer, i) => {\n          const wrong = timer === 0 && myAnswer === i && myAnswer !== correctAnswer;\n          const right = timer === 0 && i === correctAnswer;\n          const pick = timer !== 0 && i === myAnswer;\n          return <Answer\n            disabled={myAnswer != null} pick={pick} wrong={wrong} right={right}\n            onClick={this.handleAnswerClick.bind(this, i)}>{answer}</Answer>\n        })}\n      </QuestionCard>\n    );\n  }\n}\n\nexport default Card\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Card from './Card';\n\nimport {\n  Container,\n  Header,\n} from './styles';\n\n\nclass QuizPage extends React.Component {\n  render() {\n    const users = 4;\n    const points = \"1,000\";\n    const quiz = {\n      question: \"What former Franciscan mission was laid siege to over 13 day period in 1836?\",\n      answers: [\n        \"A. Chapel De la Sacramente\",\n        \"B. The Alamo\",\n        \"C. The Vera Pierre\",\n        \"D. Ultima Verdardi\",\n      ],\n      correctAnswer: 1\n    };\n\n    return (\n      <Container>\n        <Header>Question 1</Header>\n        <Card\n          users={users}\n          points={points}\n          quiz={quiz}\n        ></Card>\n        <Link to=\"/\">About</Link>\n      </Container>\n    );\n  }\n}\n\nexport default QuizPage\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport {\n  Container,\n  Header,\n  Logo,\n  Input,\n  Label,\n  Button,\n  Countdown,\n  RoundButton,\n} from './styles';\n\nfunction toMMSS(seconds) {\n  let mm = parseInt(seconds / 60);\n  if (mm < 10) {\n    mm = '0' + mm\n  }\n  let ss = seconds % 60;\n  if (ss < 10) {\n    ss = '0' + ss\n  }\n  return `${mm}:${ss}`\n}\n\nclass LobbyPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      done: false,\n      countdownSec: 10 * 60,\n    };\n    this.handleNextClick = this.handleNextClick.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.countdown();\n  }\n\n  countdown() {\n    let { countdownSec } = this.state;\n    setTimeout(() => {\n      countdownSec = countdownSec - 1;\n      this.setState({ countdownSec });\n      if (countdownSec) {\n        this.countdown();\n      } else {\n        console.log('todo: go to quizz page');\n      }\n    }, 1000);\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleNextClick() {\n    const { name } = this.state;\n    //console.log('next clicked ' + name);\n    if (name) {\n      this.setState({ done: true });\n    }\n  }\n\n  render() {\n    const { name, done, countdownSec } = this.state;\n    const countdown = toMMSS(countdownSec);\n    return (\n      <Container>\n        {!done ?\n          <Header>Welcome! <span role='img' aria-label=\"up\">👋</span></Header>\n          :\n          <Header>Welcome back, {name}! <span role='img' aria-label=\"up\">👋</span></Header>\n        }\n        <Logo src=\"whitelogo.png\" />\n        {!done ?\n          <React.Fragment>\n            <Label>Enter your name</Label>\n            <Input onChange={this.handleNameChange} />\n            <Button onClick={this.handleNextClick}>Next</Button>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <Label>Starting in</Label>\n            <Countdown>{countdown}</Countdown>\n          </React.Fragment>\n        }\n        <Link to=\"/quiz/1\">Quiz Page</Link>\n        <RoundButton to=\"/leaders\"><span role=\"img\" aria-label=\"trophy\">🏆</span></RoundButton>\n      </Container>\n    );\n  }\n}\n\nexport default LobbyPage\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  max-width: 420px;\n  width: 100%;\n  margin: 0px 8px;\n  height: 32px;\n  border-bottom: 1px solid rgba(0,0,0,0.1);\n  padding-bottom: 8px;\n  padding-top: 8px;\n`;\n\nconst Group = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Name = styled.div`\n  color: white;\n  font-size: 18px;\n  text-align: left;\n`;\n\nconst Place = styled(Name)`\n  font-weight: 700;\n  margin-right: 16px;\n`;\n\nconst Points = styled(Name)`\n  text-align: right;\n`;\n\nclass LeaderRow extends React.Component {\n  render() {\n    const {\n      place,\n      name,\n      points,\n    } = this.props;\n    return (\n      <Row>\n        <Group>\n          <Place>{place}</Place>\n          <Name>{name}</Name>\n        </Group>\n        <Group>\n          <Points>{points}</Points>\n        </Group>\n      </Row>\n    );\n  }\n}\n\nexport default LeaderRow\n","import React from 'react';\nimport LeaderRow from './LeaderRow';\n\nimport {\n  Container,\n  Header,\n  LinkButton,\n  Countdown\n} from './styles';\n\nclass ResultsPage extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Header><span role='img' aria-label=\"up\">👍</span> You did it!</Header>\n        <Countdown>1st</Countdown>\n        <Header>10,000 points</Header>\n        <Header>Leaderboard</Header>\n        <LeaderRow place=\"1st\" name=\"Aung\" points=\"10,000\"/>\n        <LeaderRow place=\"2nd\" name=\"Chris\" points=\"9,000\"/>\n        <LeaderRow place=\"3rd\" name=\"EJ\" points=\"8,000\"/>\n        <LeaderRow place=\"4th\" name=\"Ron\" points=\"7,000\"/>\n        <br/>\n        <LinkButton to=\"/\">Done</LinkButton>\n      </Container>\n    );\n  }\n}\n\nexport default ResultsPage\n","import React from 'react';\nimport LeaderRow from './LeaderRow';\n\nimport {\n  Container,\n  Header,\n  LinkButton,\n} from './styles';\n\nclass Leaderboard extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Header>Leaderboard <span role='img' aria-label=\"trophy\">🏆</span></Header>\n        <LeaderRow place=\"1st\" name=\"Aung\" points=\"10,000\"/>\n        <LeaderRow place=\"2nd\" name=\"Chris\" points=\"9,000\"/>\n        <LeaderRow place=\"3rd\" name=\"EJ\" points=\"8,000\"/>\n        <LeaderRow place=\"4th\" name=\"Ron\" points=\"7,000\"/>\n        <br/>\n        <LinkButton to=\"/\">Back</LinkButton>\n      </Container>\n    );\n  }\n}\n\nexport default Leaderboard\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\";\n\nimport { LobbyPage, QuizPage, ResultsPage, Leaderboard } from './Screens';\nimport styled from 'styled-components';\n\nconst Global = styled.div`\n  height: 100vh;\n  width: 100vw;\n  background: -moz-linear-gradient(-45deg, #2555d9 0%, #00bf6f 100%);\n  background: -webkit-linear-gradient(-45deg, #2555d9 0%,#00bf6f 100%);\n  background: linear-gradient(135deg, #2555d9 0%,#00bf6f;\n  display: flex;\n  color: white;\n  * {\n    font-family: 'Montserrat', sans-serif!important;\n    box-sizing: border-box;\n  }\n`;\n\nfunction Lobby() {\n  return <LobbyPage/>;\n}\n\nfunction Quiz() {\n  return <QuizPage/>\n}\n\nfunction Results() {\n  return <ResultsPage/>\n}\n\nfunction Leaders() {\n  return <Leaderboard/>\n}\n\nfunction App() {\n  return (\n    <Global>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Lobby />\n          </Route>\n          <Route path=\"/quiz/:id\" children={<Quiz />} />\n          <Route path=\"/results\">\n            <Results />\n          </Route>\n          <Route path=\"/leaders\">\n            <Leaders />\n          </Route>\n        </Switch>\n      </Router>\n    </Global>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}