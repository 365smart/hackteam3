{"version":3,"sources":["Screens/styles.js","Screens/Card.js","Screens/QuizPage.js","Screens/LobbyPage.js","Screens/LeaderRow.js","Screens/ResultsPage.js","Screens/Leaderboard.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","Header","props","dark","Logo","img","Label","label","Input","input","Button","button","Countdown","QuestionCard","LinkButton","Link","RoundButton","SmallCard","TopSection","Timer","wrong","right","Question","Answer","pick","DEFAULT_TIMER","Card","state","timer","myAnswer","showNext","handleAnswerClick","bind","handleNextClick","this","countdownTimer","setState","history","nextId","setTimeout","push","reset","WAIT_TIME","id","console","log","answerId","users","points","question","answers","name","map","answer","key","disabled","onClick","React","Component","QuizPage","useParams","useHistory","parseInt","quiz","questions","find","q","filter","a","questionId","length","array","i","j","Math","floor","random","temp","shuffleArray","role","aria-label","LobbyPage","done","countdownSec","handleNameChange","countdown","event","target","value","seconds","mm","ss","toMMSS","style","textTransform","src","Fragment","to","opacity","volume","pointerEvents","url","playing","htmlfor","onChange","autoFocus","Row","Group","Name","Place","Points","LeaderRow","place","ResultsPage","Leaderboard","Global","Lobby","Quiz","match","useRouteMatch","path","children","Results","Leaders","App","exact","Boolean","window","location","hostname","ReactDOM","render","data","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.af92a35c.chunk.js","sourcesContent":["import styled from 'styled-components'\nimport { Link } from 'react-router-dom';\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  color: white;\n  align-items: center;\n  padding: 16px;\n`;\n\nconst Header = styled.div`\n  width: 100%;\n  font-size: 24px;\n  height: 48px;\n  line-height: 48px;\n  text-align: center;\n  color: ${props => props.dark ? '#22212D' : '#FFF'}\n`;\n\nconst Logo = styled.img`\n  height: 160px;\n  width: 160px;\n  margin-bottom: 40px;\n  margin-top: 16px;\n  @media (max-width: 767px){\n    height: 96px;\n    width: 96px;\n    margin-bottom: 16px;\n    margin-top: 8px;\n  }\n`;\n\nconst Label = styled.label`\n  line-height: 32px;\n  font-size: 24px;\n  font-weight: 400;\n`;\n\nconst Input = styled.input`\n  height: 64px;\n  background: white;\n  color: #22212D;\n  font-size: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  border-radius: 45px;\n  width: 100%;\n  max-width: 420px;\n  margin: 16px;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif!important;\n  box-sizing: border-box;\n  text-transform: capitalize;\n  &:focus {\n    box-shadow: 0 0 0 0.2rem #22212D;\n  }\n  @media (max-width: 767px){\n    height: 48px;\n    line-height: 48px;\n  }\n`;\n\nconst Button = styled.button`\n  border-radius: 45px;\n  height: 64px;\n  background: #22212D;\n  color: white;\n  font-size: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  border-radius: 45px;\n  width: 100%;\n  max-width: 420px;\n  margin: 8px;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif!important;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.12), 0 4px 4px rgba(0,0,0,0.24);\n  &:focus {\n    box-shadow: none;\n  }\n  @media (max-width: 767px){\n    height: 48px;\n    line-height: 48px;\n  }\n`;\n\nconst Countdown = styled.div`\n  font-size: 80px;\n  font-weight: 700;\n  line-height: 96px;\n`;\n\nconst QuestionCard = styled.div`\n  background: white;\n  padding: 16px;\n  border-radius: 16px;\n  width: 100%;\n  display: flex;\n  margin: 16px;\n  height: auto;\n  align-items: center;\n  flex-direction: column;\n  max-width: 480px;\n`;\n\nconst LinkButton = styled(Link)`\n  border-radius: 45px;\n  height: 64px;\n  background: #22212D;\n  color: white;\n  font-size: 24px;\n  text-align: center;\n  border: none;\n  outline: none;\n  box-shadow: none;\n  border-radius: 45px;\n  width: 100%;\n  max-width: 420px;\n  margin: 8px;\n  font-weight: 700;\n  font-family: 'Montserrat', sans-serif!important;\n  text-decoration: none;\n  line-height: 64px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.12), 0 4px 4px rgba(0,0,0,0.24);\n  &:focus {\n    box-shadow: none;\n  }\n  @media (max-width: 767px){\n    height: 48px;\n    line-height: 48px;\n  }\n`;\n\nconst RoundButton = styled(LinkButton)`\n  width: 64px;\n  height: 64px;\n  align-items: center;\n  justify-content: center;\n  display: flex;\n  position: absolute;\n  bottom: 16px;\n  right: 16px;\n  line-height: 1;\n  font-size: 32px;\n  padding-top: 2px;\n  @media (max-width: 500px){\n    font-size: 24px;\n    bottom: 80px;\n    height: 48px;\n    width: 48px;\n  }\n`\nconst SmallCard = styled(Container)`\n  background: white;\n  max-width: 540px;\n  margin: 24px;\n  width: 100%;\n  border-radius: 16px;\n  padding: 24px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.24), 0 4px 4px rgba(0,0,0,0.12);\n\n`;\n\nexport {\n  Container,\n  Header,\n  Logo,\n  Label,\n  Input,\n  Button,\n  Countdown,\n  QuestionCard,\n  LinkButton,\n  RoundButton,\n  SmallCard\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport {\n  QuestionCard,\n  Button,\n} from './styles';\n\nconst TopSection = styled.div`\n  height: 32px;\n  line-height: 32px;\n  color: #999;\n  display: flex;\n  justify-content: space-between;\n  width: 100%;\n  font-size: 18px;\n  padding: 0px 16px;\n`;\n\nconst Timer = styled.div`\n  background: ${props => props.wrong ? '#D13F4B' : props.right ? '#00BF6F' : '#22212D'}\n  height: 64px;\n  width: 64px;\n  color: white;\n  font-size: 32px;\n  border-radius: 45px;\n  text-align: center;\n  line-height: 64px;\n  margin: 8px 0px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Question = styled.div`\n  padding: 8px 24px;\n  color: #22212D;\n  font-size: 18px;\n  text-align: center;\n  font-weight: 700;\n  margin-bottom: 8px;\n`;\n\nconst Answer = styled.button`\n  width: calc(100% - 16px);\n  border-radius: 45px;\n  background: ${props => props.wrong ? '#D13F4B' : props.right ? '#00BF6F' : props.pick ? '#22212D' : '#EAEAEB' }\n  color: ${props => props.wrong ? '#FFF' : props.right ? '#FFF' : props.pick ? '#FFF' : '#22212D'}\n  height: 48px;\n  line-height: 48px;\n  padding: 0px 16px;\n  margin: 8px;\n  outline: none;\n  border: none;\n  font-size: 18px;\n  text-align: left;\n  transition-duration: 500ms;\n  &:focus {\n    background: #22212D;\n    color: white;\n  }\n`;\n\n// in seconds\nconst DEFAULT_TIMER = 7;\nconst WAIT_TIME = 2;\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timer: DEFAULT_TIMER,\n      myAnswer: null,\n      showNext: false,\n    }\n    this.handleAnswerClick = this.handleAnswerClick.bind(this);\n    this.handleNextClick = this.handleNextClick.bind(this);\n  }\n\n  componentDidMount() {\n    this.countdownTimer();\n  }\n\n  reset() {\n    this.setState({\n      showNext: false,\n      myAnswer: null,\n      timer: DEFAULT_TIMER,\n    }, () => {\n      this.countdownTimer();\n    });\n  }\n\n  countdownTimer() {\n    const { history, nextId } = this.props;\n    let { timer } = this.state;\n    setTimeout(() => {\n      timer = timer - 1;\n      this.setState({ timer });\n      if (timer) {\n        this.countdownTimer();\n      } else {\n        setTimeout(() => {\n          history.push(`/quiz/${nextId}`);\n          this.reset();\n        }, WAIT_TIME * 1000);\n      }\n    }, 1000)\n  }\n\n  handleNextClick() {\n    const { history, nextId } = this.props;\n    history.push(`/quiz/${nextId}`);\n    this.reset();\n  }\n\n  handleAnswerClick(id) {\n    console.log('history', this.props.history)\n    console.log(`answer ${id} click`)\n    const { answerId } = this.props;\n    if (id === answerId) {\n      console.log('correct answer');\n    } else {\n      console.log('wrong answer');\n    }\n    this.setState({ myAnswer: id });\n    // setTimeout(() => {\n    //   this.setState({showNext: true})\n    // }, WAIT_TIME * 1000);\n  }\n\n  render() {\n    const {\n      users,\n      points,\n      question,\n      answers,\n    } = this.props;\n\n    const answerId = question.answerId;\n    const { timer, myAnswer, showNext } = this.state;\n\n    return (\n      <QuestionCard>\n        <TopSection>\n          <div>{users} users</div>\n          <div>{points} points</div>\n        </TopSection>\n\n        {timer === 0 && myAnswer === answerId && <Timer right><ion-icon name=\"checkmark\"></ion-icon></Timer>}\n        {timer === 0 && myAnswer !== answerId && <Timer wrong><ion-icon name=\"close\"></ion-icon></Timer>}\n        {timer > 0 && <Timer>{timer}</Timer>}\n        <Question>{question.question}</Question>\n        {answers.map((answer) => {\n          const id = answer.id;\n          const wrong = timer === 0 && myAnswer === id && myAnswer !== answerId;\n          const right = timer === 0 && id === answerId;\n          const pick = timer !== 0 && id === myAnswer;\n          return <Answer key={answer.id}\n            disabled={myAnswer != null} pick={pick} wrong={wrong} right={right}\n            onClick={this.handleAnswerClick.bind(this, id)}>{answer.answer}</Answer>\n        })}\n        {showNext && <Button onClick={this.handleNextClick}>Next</Button>}\n      </QuestionCard>\n    );\n  }\n}\n\nexport default Card\n","import React from 'react';\nimport {\n  useParams, useHistory\n} from 'react-router-dom';\nimport Card from './Card';\nimport {\n  Container,\n  Header,\n} from './styles';\n\n\nfunction shuffleArray(array) {\n  for (var i = array.length - 1; i > 0; i--) {\n    var j = Math.floor(Math.random() * (i + 1));\n    var temp = array[i];\n    array[i] = array[j];\n    array[j] = temp;\n  }\n}\n\nfunction QuizPage(props) {\n  let { id } = useParams();\n  let history = useHistory();\n  id = parseInt(id);\n  // console.log('QuizPage', id,  props)\n  const { users, points, quiz } = props;\n  quiz.questions = quiz.questions || [];\n  quiz.answers = quiz.answers || [];\n  let question = quiz.questions.find(q => q.id === id) || {};\n  let answers = quiz.answers.filter(a => a.questionId === id) || [];\n  let nextId = id + 1;\n  if (nextId > quiz.questions.length) {\n    history.push('/results')\n  }\n  shuffleArray(answers);\n\n  return (\n    <Container>\n      <Header>Question {id} <span role='img' aria-label=\"think\">🤔</span></Header>\n      <Card\n        users={users}\n        points={points}\n        question={question}\n        answers={answers}\n        nextId={nextId}\n        history={history}\n      ></Card>\n      {/* <LinkButton to={\"/quiz/\" + nextId}>Next Question</LinkButton>*/}\n    </Container>\n  );\n}\n\nexport default QuizPage\n","import React from 'react';\nimport ReactPlayer from 'react-player';\n\nimport {\n  Container,\n  Header,\n  Logo,\n  Input,\n  Label,\n  Button,\n  Countdown,\n  RoundButton,\n  LinkButton\n} from './styles';\n\nfunction toMMSS(seconds) {\n  let mm = parseInt(seconds / 60);\n  if (mm < 10) {\n    mm = '0' + mm\n  }\n  let ss = seconds % 60;\n  if (ss < 10) {\n    ss = '0' + ss\n  }\n  return `${mm}:${ss}`\n}\n\nclass LobbyPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      done: false,\n      countdownSec: 4 * 60,\n    };\n    this.handleNextClick = this.handleNextClick.bind(this);\n    this.handleNameChange = this.handleNameChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.countdown();\n  }\n\n  countdown() {\n    let { countdownSec } = this.state;\n    setTimeout(() => {\n      countdownSec = countdownSec - 1;\n      this.setState({ countdownSec });\n      if (countdownSec) {\n        this.countdown();\n      } else {\n        console.log('todo: go to quizz page');\n      }\n    }, 1000);\n  }\n\n  handleNameChange(event) {\n    this.setState({ name: event.target.value });\n  }\n\n  handleNextClick() {\n    const { name } = this.state;\n    //console.log('next clicked ' + name);\n    if (name) {\n      this.setState({ done: true });\n    }\n  }\n\n  render() {\n    const { name, done, countdownSec } = this.state;\n    const countdown = toMMSS(countdownSec);\n    return (\n      <Container>\n        {!done ?\n          <Header>Welcome! <span role='img' aria-label=\"up\">👋</span></Header>\n          :\n          <Header>Welcome back, <span style={{textTransform: 'capitalize'}}>{name}</span>! <span role='img' aria-label=\"up\">👋</span></Header>\n        }\n        <Logo src=\"whitelogo.png\" />\n        {!done ?\n          <React.Fragment>\n            <Label htmlfor=\"name\">Enter your name</Label>\n            <Input id=\"name\" onChange={this.handleNameChange} autoFocus=\"autofocus\"/>\n            <Button onClick={this.handleNextClick}>Next</Button>\n          </React.Fragment>\n          :\n          <React.Fragment>\n            <Label>Starting in</Label>\n            <Countdown>{countdown}</Countdown>\n            <LinkButton to=\"/quiz/1\" style={{opacity: '0'}}>Start Now</LinkButton>\n            <ReactPlayer volume={.1} style={{opacity: '0', pointerEvents: 'none'}} url='https://www.youtube.com/watch?v=w64hc_uHysA' playing />\n        </React.Fragment>\n        }\n        <RoundButton to=\"/leaders\"><span role=\"img\" aria-label=\"trophy\">🏆</span></RoundButton>\n      </Container>\n    );\n  }\n}\n\nexport default LobbyPage\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-direction: row;\n  max-width: 420px;\n  width: 100%;\n  height: 48px;\n  border-bottom: 1px solid rgba(0,0,0,0.1);\n`;\n\nconst Group = styled.div`\n  display: flex;\n  flex-direction: row;\n`;\n\nconst Name = styled.div`\n  color: #22212D;\n  font-size: 18px\n  text-align: left;\n`;\n\nconst Place = styled(Name)`\n  font-weight: 700;\n  width: 56px;\n`;\n\nconst Points = styled(Name)`\n  text-align: right;\n`;\n\nclass LeaderRow extends React.Component {\n  render() {\n    const {\n      place,\n      name,\n      points,\n    } = this.props;\n    return (\n      <Row>\n        <Group>\n          <Place>{place}</Place>\n          <Name>{name}</Name>\n        </Group>\n        <Group>\n          <Points>{points}</Points>\n        </Group>\n      </Row>\n    );\n  }\n}\n\nexport default LeaderRow\n","import React from 'react';\nimport LeaderRow from './LeaderRow';\n\nimport {\n  Container,\n  Header,\n  LinkButton,\n  Countdown,\n  SmallCard\n} from './styles';\n\nclass ResultsPage extends React.Component {\n  render() {\n    return (\n      <Container>\n        <Header>You did it! <span role='img' aria-label=\"up\">👍</span></Header>\n        <Countdown>1st</Countdown>\n        <Header>10,000 points</Header>\n        <SmallCard>\n          <Header dark>Leaderboard <span role='img' aria-label=\"trophy\">🏆</span></Header>\n          <LeaderRow place=\"1st\" name=\"Aung\" points=\"10,000\"/>\n          <LeaderRow place=\"2nd\" name=\"Chris\" points=\"9,000\"/>\n          <LeaderRow place=\"3rd\" name=\"EJ\" points=\"8,000\"/>\n          <LeaderRow place=\"4th\" name=\"Ron\" points=\"7,000\"/>\n          <br/>\n        </SmallCard>\n        <LinkButton to=\"/\">Done</LinkButton>\n      </Container>\n    );\n  }\n}\n\nexport default ResultsPage\n","import React from 'react';\nimport LeaderRow from './LeaderRow';\n\nimport {\n  Container,\n  Header,\n  LinkButton,\n  SmallCard\n} from './styles';\n\nclass Leaderboard extends React.Component {\n  render() {\n    return (\n      <Container>\n        <SmallCard>\n          <Header dark>Leaderboard <span role='img' aria-label=\"trophy\">🏆</span></Header>\n          <LeaderRow place=\"1st\" name=\"Aung\" points=\"10,000\"/>\n          <LeaderRow place=\"2nd\" name=\"Chris\" points=\"9,000\"/>\n          <LeaderRow place=\"3rd\" name=\"EJ\" points=\"8,000\"/>\n          <LeaderRow place=\"4th\" name=\"Ron\" points=\"7,000\"/>\n          <br/>\n        </SmallCard>\n        <LinkButton to=\"/\">Back</LinkButton>\n\n      </Container>\n    );\n  }\n}\n\nexport default Leaderboard\n","import React from 'react';\nimport {\n  HashRouter as Router,\n  Switch,\n  useRouteMatch,\n  Route,\n} from \"react-router-dom\";\n\nimport { LobbyPage, QuizPage, ResultsPage, Leaderboard } from './Screens';\nimport styled from 'styled-components';\n\nconst Global = styled.div`\n  height: 100vh;\n  width: 100vw;\n  position: fixed;\n  overflow-y: auto;\n  background: -moz-linear-gradient(-45deg, #2555d9 0%, #00bf6f 100%);\n  background: -webkit-linear-gradient(-45deg, #2555d9 0%,#00bf6f 100%);\n  background: linear-gradient(135deg, #2555d9 0%,#00bf6f;\n  display: flex;\n  color: white;\n  * {\n    font-family: 'Montserrat', sans-serif!important;\n    box-sizing: border-box!important;\n  }\n`;\n\nfunction Lobby(props) {\n  return <LobbyPage {...props} />;\n}\n\nfunction Quiz(props) {\n  console.log('Quiz: props', props);\n  let match = useRouteMatch();\n  console.log('Quiz: match', match);\n  return (\n    <Switch>\n        <Route path=\"/quiz/:id\" children={<QuizPage {...props} />} />\n    </Switch>\n  )\n}\n\nfunction Results(props) {\n  return <ResultsPage {...props} />\n}\n\nfunction Leaders(props) {\n  return <Leaderboard {...props} />\n}\n\nfunction App(props) {\n  console.log('App: props', props);\n  return (\n    <Global>\n      <Router>\n        <Switch>\n          <Route exact path=\"/\">\n            <Lobby />\n          </Route>\n          <Route path=\"/quiz/:id\">\n            <Quiz {...props} />\n          </Route>\n          <Route path=\"/results\">\n            <Results />\n          </Route>\n          <Route path=\"/leaders\">\n            <Leaders />\n          </Route>\n        </Switch>\n      </Router>\n    </Global>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport data from './data.json';\n\nReactDOM.render(<App {...data} />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}